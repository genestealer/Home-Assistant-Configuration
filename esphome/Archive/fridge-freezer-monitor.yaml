##############################################################
# 🏠 Richard Huish 2025
# 📌 ESPHome Configuration - Fridge & Freezer Temperature Monitor
# 📂 Repository: https://github.com/genestealer/Home-Assistant-Configuration
#
# 📝 Description:
# This ESPHome configuration monitors the temperature inside a fridge/freezer 
# using the built-in NTC thermistors on the fridge PCB.
# It provides real-time temperature readings and ensures early detection 
# of cooling failures.
#
# Includes shared configurations from the 'common' directory
#
# 🔩 Hardware:
# - ESP8266 (Adafruit Feather HUZZAH)
# - ADS1115 4-Channel 16-bit ADC (for high input impedance)
# - Three 5KΩ NTC Thermistors (Defrost, Freezer, Refrigerator)
# - Door Sensor (Analog Voltage Detection)
# - 10KΩ Pull-up Resistors (built into the fridge PCB)
#
# 🛠 Wiring:
# - I2C (ADS1115):  
#   - SDA (Data Line) → GPIO4  
#   - SCL (Clock Line) → GPIO5  
# - Thermistors (Voltage Divider with 10KΩ Pull-up Resistors):  
#   - Defrost Sensor → A0 (ADS1115)  
#   - Freezer Sensor → A1 (ADS1115)  
#   - Refrigerator Sensor → A2 (ADS1115)  
#   - Door Sensor → A3 (ADS1115)  
#
##############################################################

# 🔄 Substitutions for Easy Configuration
substitutions:
  # 📛 Naming
  name: fridge-freezer-monitor
  friendly_name: "Fridge Freezer Monitor"
  ui_comment: "Monitors fridge & freezer temperatures using thermistors"

  # 🌐 Network Configuration (Static IP)
  ip: 192.168.2.56
  gateway: 192.168.2.1
  subnet: 255.255.255.0

  # 🔴 Status LED Configuration
  status_led: LED_RED
  status_led_inverted: "true"

  # 📦 Project Metadata
  project_name: "genestealer.fridge-freezer-monitor"
  project_version: "1.0.0"
  package_import_url: "github://genestealer/Home-Assistant-Configuration/esphome/fridge-freezer-monitor.yaml"

  # 🛠 Debug Logging Level
  log_level: DEBUG 

  # 📊 Sensor Update Interval
  sensor_update_interval: 1min
  wifi_sensor_update_interval: 10min

##############################################################
# 🚀 ESP8266 Board Configuration
##############################################################
esp8266:
  board: huzzah

##############################################################
# 🔗 Import Shared Code (Common Components)
##############################################################
packages:
  device_base: !include common/device_base.yaml
  wifi: !include common/device_base_wifi.yaml
  # Uncomment below to remove the status LED:
  # status_led: !remove

# 🌍 Dashboard Import Settings
dashboard_import:
  package_import_url: ${package_import_url}
  import_full_config: false  # Import only necessary sections

##############################################################
# 🔄 I2C Bus Configuration (Used for ADS1115)
##############################################################
i2c:
  sda: GPIO4
  scl: GPIO5
  frequency: 400kHz  # Recommended for stable ADC readings



# Enable SPI for MAX31855
spi:
  clk_pin: GPIO14  # SCLK (D5)
  miso_pin: GPIO12 # MISO (D6)


##############################################################
# 📟 ADS1115 - 16-bit Analog-to-Digital Converter
##############################################################
ads1115:
  - address: 0x48
    continuous_mode: false  # Set to true for fast real-time sampling

##############################################################
# 🌡️ Temperature Sensor Configuration (NTC Thermistors)
##############################################################

sensor:

# Thermocouple sensor (MAX31855)
  - platform: max31855
    name: "Thermocouple Temperature"
    cs_pin: GPIO15 # CS (D8)
    update_interval: ${sensor_update_interval}



  # # ----------------------
  # # 📌 Defrost Sensor (A0)
  # # ----------------------
  # - platform: ads1115
  #   name: "Defrost Sensor Voltage"
  #   id: defrost_sensor_voltage
  #   multiplexer: A0_GND
  #   gain: 6.144
  #   update_interval: ${sensor_update_interval}
  #   accuracy_decimals: 4

#   - platform: resistance
#     id: defrost_sensor_resistance
#     sensor: defrost_sensor_voltage
#     configuration: DOWNSTREAM  # Resistor is upstream from +5V
#     resistor: 10kOhm  # Fridge's built-in pull-up resistor
#     reference_voltage: 5.0
#     name: "Defrost Sensor Resistance"

#   - platform: ntc
#     id: defrost_sensor_temperature
#     name: "Defrost Sensor Temperature"
#     sensor: defrost_sensor_resistance
#     calibration:
#       b_constant: 3977  # 5KΩ NTC with B ~3977
#       reference_temperature: 25°C
#       reference_resistance: 5kOhm

#   # ----------------------
#   # 📌 Freezer Sensor (A1)
#   # ----------------------
#   - platform: ads1115
#     name: "Freezer Sensor Voltage"
#     id: freezer_sensor_voltage
#     multiplexer: A1_GND
#     gain: 6.144
#     update_interval: ${sensor_update_interval}
#     accuracy_decimals: 4

#   - platform: resistance
#     id: freezer_sensor_resistance
#     sensor: freezer_sensor_voltage
#     configuration: DOWNSTREAM
#     resistor: 10kOhm
#     reference_voltage: 5.0
#     name: "Freezer Sensor Resistance"

#   - platform: ntc
#     id: freezer_sensor_temperature
#     name: "Freezer Sensor Temperature"
#     sensor: freezer_sensor_resistance
#     calibration:
#       b_constant: 3977  # 5KΩ NTC with B ~3977
#       reference_temperature: 25°C
#       reference_resistance: 5kOhm

#   # ----------------------
#   # 📌 Refrigerator Sensor (A2)
#   # ----------------------
#   - platform: ads1115
#     name: "Refrigerator Sensor Voltage"
#     id: refrigerator_sensor_voltage
#     multiplexer: A2_GND
#     gain: 6.144
#     update_interval: ${sensor_update_interval}
#     accuracy_decimals: 4

#   - platform: resistance
#     id: refrigerator_sensor_resistance
#     sensor: refrigerator_sensor_voltage
#     configuration: DOWNSTREAM
#     resistor: 10kOhm
#     reference_voltage: 5.0
#     name: "Refrigerator Sensor Resistance"

#   - platform: ntc
#     id: refrigerator_sensor_temperature
#     name: "Refrigerator Sensor Temperature"
#     sensor: refrigerator_sensor_resistance
#     calibration:
#       b_constant: 3977  # 5KΩ NTC with B ~3977
#       reference_temperature: 25°C
#       reference_resistance: 5kOhm

#   # ----------------------
#   # 📌 Door Sensor (A3) - Voltage-Based Binary Sensor
#   # ----------------------
#   - platform: ads1115
#     name: "Door Sensor Voltage"
#     id: door_sensor_voltage
#     multiplexer: A3_GND
#     gain: 6.144
#     update_interval: ${sensor_update_interval}
#     accuracy_decimals: 4

# ##############################################################
# # 🚪 Convert Door Sensor to Binary Sensor
# # ✅ Threshold Voltage = 2.5V (Above = Door Open, Below = Door Closed)
# ##############################################################
# binary_sensor:
#   - platform: template
#     name: "Door Sensor"
#     lambda: |-
#       if (id(door_sensor_voltage).state > 2.5) { 
#         return true;  // Door is open
#       } else {
#         return false; // Door is closed
#       }
#     filters:
#       - delayed_on: 500ms  # Prevent false triggers
#       - delayed_off: 500ms
#     device_class: door
