##############################################################
# Richard Huish 2024
# https://github.com/genestealer/Home-Assistant-Configuration
# Solar Panel Monitor Sensors
#   ----------
#   The circuit:
#     Adafruit Feather HUZZAH with ESP8266 https://www.adafruit.com/product/2821
#     Adafruit FeatherWing OLED - 128x32 OLED Add-on For Feather https://www.adafruit.com/product/2900
#   Inputs:
#     3 x buttons on Adafruit FeatherWing OLED
#     1 x YHDC Current Transformer SCT-013-000 15A/1V
#     1 x ADS1115 4-Channel 16-Bit A/D Converter
#   Outputs:
#     Adafruit FeatherWing OLED
#     OtherBusyLight indicators on my network
##############################################################
# Config Header for Device
##############################################################
substitutions:
  # Names
  name: air-con-current-clamp
  friendly_name: "Air Conditioner Current Clamp"
  ui_comment: "Air Conditioner Current Clamp" # Only shows in UI.
  
  # Wifi Settings
  ip: 192.168.2.50
  gateway: 192.168.2.1
  subnet: 255.255.255.0

  # Board Settings
  status_led: GPIO16 # NodeMCU on-board LED
  status_led_inverted: "false"
  
  # Debug Component
  log_level: DEBUG 

  # Project 
  project_name: "genestealer.air-con-current-clamp"
  project_version: "1.0.0"
  package_import_url: "github://genestealer/Home-Assistant-Configuration/esphome/air-con-current-clamp.yaml"

  # Sensor update interval
  sensor_update_interval: 60s

  ct_clamp_sample_duration: 500ms

##############################################################
# Platform
##############################################################
esp8266:
  board: nodemcuv2

##############################################################
# Import shared code
##############################################################

# Packages 
packages:
  device_base: !include common/device_base.yaml
  wifi: !include common/device_base_wifi.yaml
# To remove status_led for a specific device, uncomment the line below:
# status_led: !remove

dashboard_import:
  package_import_url: ${package_import_url}
  import_full_config: false # or true


##############################################################
# Main Code
##############################################################

i2c:
  sda: GPIO4
  scl: GPIO5
  frequency: 400kHz #https://github.com/esphome/issues/issues/4717#issuecomment-1643391691


# ADS1115 4-Channel 16-Bit A/D Converter
ads1115:
  - address: 0x48
    continuous_mode: true # enable for the CT Clamp Current Sensor integration


# Zero amps (Disconnected) = -0.00025 V / -0.00028 V which is saying 0.00308 A


sensor:
  - platform: ads1115
    name: "CT A0-GND"
    id: adc_sensor
    multiplexer: 'A0_GND' # between Pin 0 and GND
    gain: 1.024 # measures up to 1.024V
    update_interval: ${sensor_update_interval}
    accuracy_decimals: 4


  - platform: ct_clamp
    sensor: adc_sensor
    name: "Measured Current"
    id: ct_clamp_sensor
    accuracy_decimals: 4
    sample_duration: ${ct_clamp_sample_duration}
    update_interval: ${sensor_update_interval}
    filters:
      - calibrate_linear:
          # Measured value of 0 Volt to 0A
          - 0.0005 -> 0

          # - -0.0000 -> 0
          # 1 V --> 15 Amp from CT sensor
          
          # - -0.008 -> 0.3
          # - 0.0135 -> 0.4
          # - 0.1511 -> 0.9
          # - 0.0165 -> 1.9
          # - 0.4877 -> 2.1
          # - 0.0558 -> 2.2
          - 1.0 -> 15.0



  # Read a known voltage from Home Assistant to get a more accurate running position
  - platform: homeassistant
    name: "Known Voltage"
    entity_id: sensor.myups_input_voltage
    id: known_volts
    accuracy_decimals: 3

  - platform: template
    id: my_power1
    name: "Power"
    lambda: return (id(ct_clamp_sensor).state * id(known_volts).state);
    update_interval: ${sensor_update_interval}
    accuracy_decimals: 2
    unit_of_measurement: 'W'
    state_class: measurement
    device_class: power

  # Total day usage
  - platform: total_daily_energy
    name: 'Energy'
    id: sensor_total_daily_energy
    power_id: my_power1
    unit_of_measurement: 'kWh'
    icon: mdi:circle-slice-3
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 4
    update_interval: ${sensor_update_interval}
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
      # Update the sensor once per 0.1 kWh consumed, or every 10 seconds, whichever happens sooner.
      # https://github.com/klaasnicolaas/home-assistant-glow/#reduce-the-amount-of-data-the-sensors-produce / https://glow-energy.io/docs/faq/reduce_sensor_data
      # for more information.
      - delta: 0.01
      - heartbeat: ${sensor_update_interval}

# Enable time component to reset energy at midnight
# https://esphome.io/components/time/homeassistant.html
time:
  - platform: homeassistant
    id: homeassistant_time

# SSD1306 OLED Display
font:
  - file: "fonts/comic.ttf"
    id: my_font
    size: 17
  - file: "fonts/comic.ttf"
    id: my_fontbismall
    size: 17



        # it.printf(it.get_width(), 0, id(my_fontbismall), TextAlign::TOP_RIGHT, "%s", id(ct_clamp_sensor).state.c_str());
    #    it.printf(it.get_width(), 22, id(my_fontbismall), TextAlign::TOP_RIGHT, "%s", id(bssid).state.c_str());
    # it.image(0, 0, id(my_image));


display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    # reset_pin: D0
    address: 0x3C
    lambda: |-
      it.printf(0, 0, id(my_font), "%.4f V", id(adc_sensor).state);
      it.printf(0, 17, id(my_font), "%.4f A", id(ct_clamp_sensor).state);
      it.printf(0, 32, id(my_font), "%.4f W", id(my_power1).state);



