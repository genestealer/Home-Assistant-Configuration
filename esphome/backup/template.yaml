##############################################################
# 🏠 Richard Huish 2025
# 📌 ESPHome Configuration - [DEVICE PURPOSE]
# 📂 Repository: https://github.com/genestealer/Home-Assistant-Configuration
#
# 📝 Description:
# This ESPHome configuration is for a [DEVICE PURPOSE], enabling 
# real-time monitoring and integration with Home Assistant. 
# It utilizes [HARDWARE COMPONENTS] to measure and report data 
# such as [METRICS] for improved automation and analytics.
#
# 🔧 Features:
# - ✅ [Feature 1: e.g., Measures AC current using a CT clamp]
# - ✅ [Feature 2: e.g., Calculates power usage in watts]
# - ✅ [Feature 3: e.g., Sends real-time data to Home Assistant]
#
# 🔩 Hardware:
# - [DEVICE NAME]: [MANUFACTURER / MODEL / LINK]
# - [SENSORS / MODULES]: [MODEL / SPECS / PURPOSE]
#
# 🌐 Connectivity:
# - Wi-Fi enabled for seamless integration with Home Assistant
# - Static IP configuration for reliable network operation
#
# 🛠 Maintenance:
# - OTA updates supported for remote firmware upgrades
# - Status LED for device health monitoring
#
##############################################################

# 🔄 Substitutions - Easily Configurable Parameters
substitutions:
  # 📛 Naming & Identification
  name: [device_id]
  friendly_name: "[Descriptive Friendly Name]"
  ui_comment: "[Short Description for UI]"  # Displayed in ESPHome UI only

  # 🌐 Network Configuration (Static IP Settings)
  ip: 192.168.X.XX
  gateway: 192.168.X.1
  subnet: 255.255.255.0

  # 🔴 Status LED
  status_led: GPIOXX  # Pin used for status indication
  status_led_inverted: "true"

  # 📦 Metadata & Versioning
  project_name: "genestealer.[device_id]"
  project_version: "1.0.0"
  package_import_url: "github://genestealer/Home-Assistant-Configuration/esphome/[device_id].yaml"

  # 📊 Sensor Update Intervals
  sensor_update_interval: 10s  # General update interval
  specific_sensor_update_interval: 10s  # For high-frequency sensors

  # 🔄 Sampling Durations & Thresholds
  sample_duration: 400ms  # Capture duration for AC measurement

##############################################################
# 🚀 ESP Platform Configuration
##############################################################
esp8266:
  board: [board_model]  # Define ESP board (e.g., huzzah, nodemcu)

##############################################################
# 🔗 Shared Code & Package Imports
##############################################################
packages:
  device_base: !include common/device_base.yaml
  wifi: !include common/device_base_wifi.yaml
# Uncomment below to disable the status LED for this device:
# status_led: !remove

# 🌍 Dashboard Import Settings
dashboard_import:
  package_import_url: ${package_import_url}
  import_full_config: false  # Import only essential sections

##############################################################
# 🔄 I2C Configuration (For Connected Modules)
##############################################################
i2c:
  sda: GPIOX  # I2C Data line
  scl: GPIOX  # I2C Clock line
  frequency: 800kHz  # Adjusted for faster data communication

##############################################################
# 📟 ADC / External Sensor Module (ADS1115, etc.)
##############################################################
ads1115:
  - address: 0x48
    continuous_mode: true  # Enables high-speed sampling mode

##############################################################
# 📊 Sensor Configuration & Data Processing
##############################################################

sensor:
  # 📡 ADS1115 Input - Raw Analog Measurement
  - platform: ads1115
    name: "CT 0"
    id: adc_sensor
    internal: true  # Hide from UI
    multiplexer: 'A0_GND'
    gain: 1.024  # Voltage range setting
    update_interval: ${sensor_update_interval}
    accuracy_decimals: 5
    filters:
      - median:
          window_size: 5  # Noise reduction
          send_every: 2  # Less frequent updates

  # 🔌 Current Transformer (CT Clamp) - AC Current Measurement
  - platform: ct_clamp
    sensor: adc_sensor
    name: "Measured Current"
    id: ct_clamp_sensor
    accuracy_decimals: 2
    internal: true  # Hide from UI
    sample_duration: ${sample_duration}  # Defines capture window
    update_interval: ${specific_sensor_update_interval}
    filters:
      - calibrate_linear:
          - -0.00022 -> 0   # Offset calibration
          - 0.10653 -> 7.7  # Calibration point 1
          - 1.0 -> 60       # Calibration point 2
      - lambda: |-
          if (x > -0.03 && x < 0.03) {
            return 0;  // Filter out noise
          }
          return x;

  # ⚡ Power Consumption (Wattage) Calculation
  - platform: template
    id: power_calculation
    name: "Power Usage"
    update_interval: ${specific_sensor_update_interval}
    accuracy_decimals: 1
    unit_of_measurement: 'W'
    state_class: measurement
    device_class: power
    filters:
      - throttle_average: ${sensor_update_interval}  # Smooth updates
      - lambda: |-
          float voltage = id(known_voltage).state > 0 ? id(known_voltage).state : 230.0;  
          float power = id(ct_clamp_sensor).state * voltage;
          return power < 50 ? 0 : power;  // Ignore small loads <50W

  # 🔋 Energy Consumption - Total Daily Usage
  - platform: total_daily_energy
    name: 'Energy Used Today'
    id: energy_today
    power_id: power_calculation
    unit_of_measurement: 'kWh'
    icon: mdi:lightning-bolt
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    filters:
      - throttle: ${sensor_update_interval}  # Limits update rate
      - multiply: 0.001  # Convert W to kW (1 W = 0.001 kW)
      - delta: 0.01  # Only update when energy changes by 0.01 kWh
      - heartbeat: ${sensor_update_interval}  # Ensure periodic updates

  # 🔌 Retrieve Known Voltage from Home Assistant
  - platform: homeassistant
    name: "Known Voltage"
    entity_id: sensor.voltage_reference
    id: known_voltage
    accuracy_decimals: 3  # High precision for calculations

##############################################################
# ⏳ Time Synchronization & Midnight Reset
##############################################################
time:
  - platform: homeassistant
    id: homeassistant_time  # Uses HA time for accurate resets
