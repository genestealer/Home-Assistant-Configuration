- id: '1541895123592'
  alias: 'Notify: if CCTV Goes Offline'
  description: Notify if CCTV goes off for more than a specific length of time, originally
    used ping detector binary sensors, but in 2022 migrated over to the camera availability,
    provided by the axis camera component. 2022, moved back to Ping detects binary
    sensors so that I can use the sensors for other things.
  triggers:
  - entity_id: binary_sensor.front_door_cctv_online
    for: 00:10:00
    from: 'on'
    to: 'off'
    trigger: state
  - entity_id: binary_sensor.bunny_cctv_online
    for: 00:10:00
    from: 'on'
    to: 'off'
    trigger: state
  - entity_id: binary_sensor.drive_cctv_online
    for: 00:10:00
    from: 'on'
    to: 'off'
    trigger: state
  - entity_id: binary_sensor.garden_cctv_online
    for: 00:10:00
    from: 'on'
    to: 'off'
    trigger: state
  - entity_id: binary_sensor.garage_cctv_online
    for: 00:10:00
    from: 'on'
    to: 'off'
    trigger: state
  - entity_id: binary_sensor.garage_2_cctv_online
    for: 00:10:00
    from: 'on'
    to: 'off'
    trigger: state
  conditions: []
  actions:
  - data:
      title: CCTV Offline
      message: '{{trigger.entity_id}} offline'
    action: notify.mobile_app_rich_mob_app
- id: '1558317969078'
  alias: CCTV Reboot Each Monday
  trigger:
  - at: 06:45
    platform: time
  condition:
  - condition: time
    weekday:
    - mon
  action:
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.11_front_door_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id:
      - button.12_drive_long_reboot
      - button.18_garden_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id:
      - button.13_garage_reboot
      - button.15_chickens_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.16_drive_high_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.21_drive_higher_reboot
- id: '1564192629041'
  alias: 'Irrigation: Pot Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.front_garden_pot_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.front_garden_pot_irrigation_valve
    service: switch.turn_off
- id: '1564192623451'
  alias: 'Irrigation: Irrigate Front Garden Pots at Sunrise'
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.front_garden_pot_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.front_garden_pot_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.front_garden_pots_irrigation_interlock
      state: Uninhibited
  action:
  - entity_id: script.front_garden_pot_irrigation_timer
    service: script.front_garden_pot_irrigation_timer
- id: '1564192123451'
  alias: 'Irrigation: Irrigate Back Garden at Sunrise'
  description: With editable offset
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.back_garden_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.back_garden_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.back_garden_irrigation_interlock
      state: Uninhibited
  action:
  - entity_id: script.back_garden_irrigation_timer
    service: script.back_garden_irrigation_timer
- id: '1564192123123'
  alias: 'Irrigation: Irrigate Back Garden Lawn at Sunrise'
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.back_garden_lawn_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.back_garden_lawn_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.back_garden_lawn_irrigation_interlock
      state: Uninhibited
  action:
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - entity_id: script.back_garden_lawn_irrigation_timer
    service: script.back_garden_lawn_irrigation_timer
- id: '1564192623452'
  alias: 'Irrigation: Irrigate Front Lawn at Sunrise'
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.front_garden_lawn_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.front_garden_lawn_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.front_garden_lawn_irrigation_interlock
      state: Uninhibited
  action:
  - entity_id: script.front_garden_lawn_irrigation_timer
    service: script.front_garden_lawn_irrigation_timer
- id: '1564234217905'
  alias: 'Irrigation: Lawn Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.front_garden_lawn_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.front_garden_lawn_irrigation_valve
    service: switch.turn_off
- id: '1512334217905'
  alias: 'Irrigation: Garden Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.back_garden_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.back_garden_irrigation_valve
    service: switch.turn_off
- id: '1512331237905'
  alias: 'Irrigation: Garden Lawn Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.back_garden_lawn_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - entity_id: switch.back_garden_lawn_1_irrigation_valve
    service: switch.turn_off
  - entity_id: switch.back_garden_lawn_2_irrigation_valve
    service: switch.turn_off
- id: '1572464632861'
  alias: Smoke Machine Automation - Smoke
  description: 'Don''t need to turn on and off, as RF Link signal_repetitions: xx
    is used to set on the "on" time. Makes use of twrecked/hass-momentary Momentary
    Switch Component for Home Assistant'
  trigger:
  - event_data: {}
    event_type: smoke_machine_automation
    platform: event
    enabled: false
  - type: motion
    platform: device
    device_id: 853ca02c816df4ce4860c07060837a6a
    entity_id: binary_sensor.front_door_11_vmd4_camera1profile2
    domain: binary_sensor
    enabled: false
  - type: motion
    platform: device
    device_id: 83dd8340e23fb86fef21b09a22a57929
    entity_id: binary_sensor.drive_higher_21_vmd4_camera1profile2
    domain: binary_sensor
    enabled: false
  - platform: state
    entity_id:
    - switch.smoke_machine
    to: 'off'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
    enabled: false
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  - event: smoke_machine_automation
    event_data: {}
    enabled: false
  - service: switch.toggle
    data: {}
    target:
      entity_id: switch.smoke_machine
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
    enabled: true
- id: '1576599112935'
  alias: Welcome home Richard
  description: 'Note: These actions can only be edited with YAML'
  trigger:
  - entity_id: person.richard
    for: 00:05:00
    from: not_home
    platform: state
    to: home
  condition: []
  action:
  - data_template:
      cache: false
      entity_id: media_player.ground_floor
      message: "Welcome home Richard. {% if is_state('person.lucy', 'home')  %} Lucy
        is also at home and needs cuddles! {%- else -%}\n    Lucy is away at {{state_attr('device_tracker.google_maps_114635444798949098363',
        'address')}}.\n {%- endif %}\n    Outside {{states('sensor.dark_sky_temperature')|
        round(0)}}C {{states('sensor.dark_sky_humidity')| round(0) }}% Inside {{states('sensor.entryway_thermostat_temperature')|
        round(0)}}C \n{{states('sensor.entryway_thermostat_humidity')| round(0)}}%
        {% if is_state('climate.entryway', 'heat') %} Heating on and set to {{state_attr('climate.entryway',
        'temperature')| round(0) }}Â°C\n{%- endif %}\n"
    service: tts.google_translate_say
- id: '1576601014597'
  alias: Plug-in Air Freshener - On-Off Automation
  description: 'Turn on in the morning when someone is home as long as it between
    certain times. Also turns back on after returning home. Turn off in the evening
    or when no one is home. Repeat as it sometimes does not work '
  trigger:
  - platform: time
    at: input_datetime.air_freshener_on_time
  - platform: time
    at: input_datetime.air_freshener_off_time
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: leave
    enabled: false
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: enter
    enabled: false
  - platform: zone
    entity_id: person.lucy
    zone: zone.home
    event: enter
    enabled: false
  - platform: zone
    entity_id: person.lucy
    zone: zone.home
    event: leave
    enabled: false
  - platform: state
    entity_id:
    - person.lucy
    to:
    for:
      hours: 0
      minutes: 5
      seconds: 0
    enabled: true
  - platform: state
    entity_id:
    - person.richard
    to:
    for:
      hours: 0
      minutes: 5
      seconds: 0
    enabled: true
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: input_datetime.air_freshener_on_time
          before: input_datetime.air_freshener_off_time
        - condition: or
          conditions:
          - condition: state
            entity_id: person.lucy
            state: home
          - condition: state
            entity_id: person.richard
            state: home
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.plug_in_air_freshener_1
        data: {}
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: switch.turn_on
        target:
          entity_id:
          - switch.plug_in_air_freshener_2
        data: {}
    default:
    - service: switch.turn_off
      target:
        entity_id:
        - switch.plug_in_air_freshener_1
      data: {}
    - delay:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - service: switch.turn_off
      target:
        entity_id:
        - switch.plug_in_air_freshener_2
      data: {}
  mode: restart
- id: '1576601770197'
  alias: Welcome home Lucy
  description: 'Note: These actions can only be edited with YAML'
  trigger:
  - entity_id: person.lucy
    for: 00:05:00
    from: not_home
    platform: state
    to: home
  condition: []
  action:
  - data_template:
      cache: false
      entity_id: media_player.ground_floor
      message: "Welcome home Lucy. {% if is_state(\"person.richard\", \"home\")  %}
        Richard is also at home, please see him for cuddles! {%- else -%}\n    Richard
        is currently {{states('person.richard')}}, at\n{{states('sensor.richard_street_location')}}.
        {%- endif %} The heating is set to {{states('climate.entryway')}} at {{state_attr('climate.entryway',
        'temperature')| round(0) }}Â°C\n"
    service: tts.google_translate_say
- id: '1576602219341'
  alias: Keep Nest thermostat aware of our presence
  description: contindion template {{ state_attr('climate.entryway', 'preset_mode')
    == Away and Eco }}
  trigger:
  - minutes: /10
    platform: time_pattern
  - event: start
    platform: homeassistant
  - entity_id: binary_sensor.huishs_away
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: group.mobiles_group
    state: home
  - condition: state
    entity_id: binary_sensor.huishs_away
    state: 'on'
  action:
  - data:
      away_mode: home
    service: nest.set_away_mode
  - data:
      message: Nest forced back to heat mode while you are at home.
    service: notify.google_cloud_notify
- id: '1581770041173'
  alias: 'Notify: Electricity supply voltage is LOW/HIGH'
  description: Send Notification when Electricity Voltage is Low or High
  triggers:
  - above: '254'
    entity_id: sensor.myups_input_voltage
    trigger: numeric_state
    id: high
  - below: '220'
    entity_id: sensor.myups_input_voltage
    trigger: numeric_state
    id: low
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - low
      sequence:
      - data:
          data:
            color: white
            channel: Electricity
            vibrationPattern: 100,500,100,500,100,500,100,500
            importance: high
            visibility: public
            notification_icon: mdi:lightning-bolt
            ttl: 0
            priority: high
            sticky: 'true'
          message: 'Electricity Voltage: {{ states(''sensor.myups_input_voltage'')
            }} Volts. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
          title: Electricity Voltage Low
        action: notify.mobile_app_rich_mob_app
    - conditions:
      - condition: trigger
        id:
        - high
      sequence:
      - data:
          data:
            color: white
            channel: Electricity
            vibrationPattern: 100,500,100,500,100,500,100,500
            importance: high
            visibility: public
            notification_icon: mdi:lightning-bolt
            ttl: 0
            priority: high
            sticky: 'true'
          message: 'Electricity Voltage: {{ states(''sensor.myups_input_voltage'')
            }} Volts. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
          title: Electricity Voltage High
        action: notify.mobile_app_rich_mob_app
- id: '1581770321118'
  alias: 'Notify: UPS is close to being depleted'
  description: Send Notification when UPS is about to shutdown (10 mins left)
  triggers:
  - below: 600
    entity_id: sensor.myups_battery_runtime
    trigger: numeric_state
  conditions: []
  actions:
  - data:
      data:
        color: white
        channel: Electricity
        vibrationPattern: 100,500,100,500,100,500,100,500
        importance: high
        visibility: public
        notification_icon: mdi:lightning-bolt
        ttl: 0
        priority: high
        sticky: 'true'
      message: 'UPS is running low: {{ (((states(''sensor.myups_battery_runtime'')
        | int) / 60) | int  )}} minutes left. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

        '
      title: 'WARNING: UPS close to being depleted'
    action: notify.mobile_app_rich_mob_app
- id: '1581773259354'
  alias: Bunny shed status monitor notify
  description: Monitor the health of my gateways
  trigger:
  - entity_id: binary_sensor.bs_status
    for:
      hours: 0
      minutes: 10
      seconds: 0
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      message: Bunny Shed Controller has been offline for 10 mins. {{now().strftime('%Y-%m-%d
        %I:%M %p')}}
      title: Irrigation offline
    service: notify.google_cloud_notify
- id: '1581773123827'
  alias: 'Notify: Possible DDOS attack'
  trigger:
  - above: '70000'
    entity_id: sensor.pi_hole_dns_queries_today
    platform: numeric_state
  action:
  - data:
      message: 'DNS Queries: {{ states(''sensor.pi_hole_dns_queries_today'') }}

        '
      title: Possible DDOS Attack from inside network
    service: notify.google_cloud_notify
- id: '1581123123827'
  alias: Simulate Presence Lights - OLD
  description: Automation Simulate Presence / Occupancy Simulation. Runs single and
    if we get home it will turn off all the lights (cancel the run)
  triggers:
  - entity_id:
    - person.richard
    from: home
    to:
    trigger: state
  - entity_id:
    - person.lucy
    from: home
    to: not_home
    trigger: state
  - event: sunset
    offset: +00:30:00
    trigger: sun
  - event_type: event_simulate_presence
    trigger: event
  conditions:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - before: '23:55:00'
      condition: time
    - condition: state
      entity_id: input_boolean.simulate_presence_enable
      state: 'on'
    - condition: state
      entity_id: person.lucy
      state: not_home
    - condition: state
      entity_id: person.richard
      state: not_home
  actions:
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights_group'', ''entity_id'')
        | random }}'
    action: light.turn_on
  - delay: 00:{{ (range(10, 30) | random) }}:00
  - if:
    - condition: or
      conditions:
      - condition: time
        after: '11:50:00'
      - condition: state
        entity_id: person.lucy
        state: home
      - condition: state
        entity_id: person.richard
        state: home
    then:
    - data: {}
      target:
        entity_id: light.presence_simulation_lights_group
      action: light.turn_off
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights_group'', ''entity_id'')
        | random }}'
    action: light.turn_on
  - delay: 00:{{ (range(10, 30) | random) }}:00
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights_group'', ''entity_id'')
        | random }}'
    action: light.turn_off
  - if:
    - condition: or
      conditions:
      - condition: time
        after: '11:50:00'
        enabled: false
      - condition: state
        entity_id: person.lucy
        state: home
      - condition: state
        entity_id: person.richard
        state: home
    then:
    - data: {}
      target:
        entity_id: light.presence_simulation_lights_group
      action: light.turn_off
  - event: event_simulate_presence
  mode: single
- id: '1590103997253'
  alias: 'Server Getting Hot '
  description: ''
  trigger:
  - above: '65'
    entity_id: sensor.server_server_raid_controller_temperature
    platform: numeric_state
  condition: []
  action:
  - data:
      message: Server is getting HOT!
    service: notify.google_cloud_notify
- id: '1592486159377'
  alias: Parcel Box Opened Notify - Rev 1
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 2aadd916ad46270ecda5ab407a461e6c
    entity_id: binary_sensor.parcel_box_contact
    domain: binary_sensor
  condition: []
  action:
  - data:
      message: Parcel box has just been opened
      title: Delivery
    service: notify.pushover_notify
    enabled: false
  - data:
      filename: /config/www/tmp/drive.jpg
    entity_id: camera.drive_high_16
    service: camera.snapshot
    enabled: false
  - data:
      data:
        attachment: /config/www/tmp/drive.jpg
      message: Delivery person?
      title: Driveway CCTV Photo
    service: notify.pushover_notify
    enabled: false
  - data:
      cache: false
      entity_id: media_player.whole_house
      message: Parcel box has just been opened
    service: tts.google_translate_say
    enabled: false
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Parcel Box Opened
      data:
        image: /api/camera_proxy/camera.garage_13
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    enabled: true
  - service: notify.mobile_app_lucy_mob_app
    data:
      message: Front Door Doorbell
      data:
        image: /api/camera_proxy/camera.garage_13
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    enabled: true
  - data:
      filename: /config/www/tmp/garage.jpg
    service: camera.snapshot
    enabled: false
    target:
      entity_id:
      - camera.garage_13
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Parcel Box Opened
      data:
        image: /local/tmp/garage.jpg
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    enabled: false
  mode: single
- id: '1601037277352'
  alias: Proximity/Perimeter Warning System - Primary and Secondary Zone Failure
  description: ''
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_113691586554404814686
    zone: zone.outer_perimeter
    event: enter
  - platform: zone
    entity_id: device_tracker.google_maps_113691586554404814686
    zone: zone.inner_perimeter
    event: enter
  condition:
  - condition: or
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
  action:
  - choose:
    - conditions:
      - condition: zone
        entity_id: device_tracker.google_maps_113691586554404814686
        zone: zone.inner_perimeter
      sequence:
      - service: notify.google_cloud_notify
        data:
          message: '!!Primary Zone Failure - Inner Perimeter!!'
      - service: notify.pushover_notify
        data:
          message: '!!Primary Zone Failure - Inner Perimeter!!'
          title: '!!Primary Zone Failure - Inner Perimeter!!'
          data:
            sound: alien
            priority: 1
      - service: script.flash_dining_room_lights
      - service: script.flash_dining_room_lights
      - data:
          cache: false
          entity_id: media_player.whole_house
          message: WOOP! WOOP! WOOP! WOOP! WOOP! ALERT:Warning! Primary Zone Failure!
            Warning! Primary Zone Failure! Warning! Primary Zone Failure! Close the
            fucking doors and windows for the love of bunnies hide! Arg!!!!
        service: tts.google_translate_say
    - conditions:
      - condition: zone
        entity_id: device_tracker.google_maps_113691586554404814686
        zone: zone.outer_perimeter
      sequence:
      - service: notify.google_cloud_notify
        data:
          message: Secondary Zone Failure - Outer Perimeter
      - service: notify.pushover_notify
        data:
          message: Secondary Zone Failure - Outer Perimeter
          title: Secondary Zone Failure - Outer Perimeter
          data:
            sound: tugboat
            priority: 0
      - data:
          cache: false
          entity_id: media_player.whole_house
          message: Notice! Secondary Zone Failure! Secondary Zone Failure - Outer
            Perimeter - Outer Perimeter
        service: tts.google_translate_say
  mode: single
- id: '1601317646616'
  alias: Front Lawn Anti Cat Defences
  description: Front Lawn Anti Cat Defence
  triggers:
  - type: motion
    device_id: 99689212065c11ebbd2ecbef1587dfe1
    entity_id: binary_sensor.drive_high_16_vmd4_camera1profile2
    domain: binary_sensor
    trigger: device
  conditions:
  - condition: time
    after: input_datetime.fld_active_start
    before: input_datetime.fld_active_till
  - type: is_no_motion
    condition: device
    device_id: ed137229065c11eb8030a1dacd09fb94
    entity_id: binary_sensor.p3224_lv_0_vmd4_camera1profile2
    domain: binary_sensor
  - condition: device
    type: is_off
    device_id: 1a18e37d81f9eaee6c1870e944461b6b
    entity_id: light.outside_1_down
    domain: light
  - condition: numeric_state
    entity_id: weather.openweathermap
    attribute: temperature
    above: 6
  - type: is_not_open
    condition: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  actions:
  - entity_id: switch.front_garden_lawn_irrigation_valve
    action: switch.turn_on
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{ states(''input_number.fld_water_on_time'')|float }}'
      milliseconds: 0
  - entity_id: switch.front_garden_lawn_irrigation_valve
    action: switch.turn_off
  mode: restart
- id: '1607604378569'
  alias: AutoHotKey - Webhook Driven - Busy Light - Process Presence Incoming Webhook
  description: 'If the automation is not restarted within 6 minutes due to a new incoming
    webhook, the status is changed to offline.  Ref: https://github.com/ajobbins/AHK-Teams-Presence'
  trigger:
  - platform: webhook
    webhook_id: 6pKQYcAJY3kWdj56MVUYb4tWLr9QmGP7kKYBd5rMBz9r6ZBrQXyKhJPbuYR3vVkV
    allowed_methods:
    - POST
    - PUT
    local_only: true
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{{ trigger.json.status }}'
    entity_id: input_text.autohotkey1
  - delay: 00:06:00
  - service: input_text.set_value
    data:
      value: Offline
    entity_id: input_text.autohotkey1
  mode: restart
- id: '1607605238090'
  alias: AutoHotKey - Webhook Driven - Busy Light - Change Busy Light Colours
  description: 'Change an RGB light to signal presence. Ref: https://github.com/ajobbins/AHK-Teams-Presence'
  triggers:
  - entity_id: input_text.autohotkey1
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Available
      sequence:
      - data:
          color_name: green
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Busy
      sequence:
      - data:
          color_name: red
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: On The Phone
      sequence:
      - data:
          color_name: orange
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: In A Meeting
      sequence:
      - data:
          color_name: orange
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Do Not Disturb
      sequence:
      - data:
          color_name: blueviolet
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Focusing
      sequence:
      - data:
          color_name: blueviolet
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Presenting
      sequence:
      - data:
          color_name: red
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        action: light.turn_on
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Away
      sequence:
      - target:
          entity_id:
          - light.busy_light_mk2_2_busy_light
          - light.busy_light_mk2_1_busy_light
        data:
          transition: 3
        action: light.turn_off
    default:
    - data:
        transition: 3
      target:
        entity_id:
        - light.busy_light_mk2_2_busy_light
        - light.busy_light_mk2_1_busy_light
      action: light.turn_off
  mode: restart
- id: '1619906809678'
  alias: Outside Lights - House Number Sign Light Schedule
  description: ' Use wait to ensure the Choose action for time is after the trigger
    time, not on the time.'
  trigger:
  - platform: sun
    event: sunset
    offset: +00:30:00
    id: Turn On
  - platform: time
    at: input_datetime.house_sign_light_off_time
    id: Turn Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Turn Off
      sequence:
      - target:
          entity_id:
          - light.outside_2_down
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Turn On
      sequence:
      - action: light.turn_on
        target:
          entity_id:
          - light.outside_2_down
        data:
          brightness_pct: 1
          kelvin: 6500
  mode: single
- id: '1621103260448'
  alias: Ice Maker - On-Off Automation
  description: 'On-Off Schedule with presence awareness, state restoration and high
    temperature alarm (Turn on the ice maker for a set time if the water temperature
    goes above a set threshold. Only run if ice maker is not already on). Removes
    the previous blueprint and other automations. Note: Zone trigger does not support
    delay, hence the use of the state trigger for presence awareness (to avoid frequent  switch
    cycling whilst at home with poor location accuracy) I.E. Check if the ice maker
    is off before trying to turn it on, and vice versa.'
  trigger:
  - platform: time
    at: input_datetime.ice_maker_on_time
    id: 'On'
  - platform: time
    at: input_datetime.ice_maker_off_time
    id: 'Off'
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: leave
    id: 'Off'
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: enter
    id: 'On'
  - platform: numeric_state
    entity_id:
    - sensor.icemaker_water_temperature
    above: input_number.ice_maker_water_high_temperature_threshold
    id: Hot
  - type: connected
    platform: device
    device_id: 996ea9226cbd0c2fe7ddb21af32045f9
    entity_id: 1ef6ddd3ef1e712df001733e0ac1d6a9
    domain: binary_sensor
    id: Check
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.ice_maker_on_time
        before: input_datetime.ice_maker_off_time
      - condition: zone
        entity_id: person.richard
        zone: zone.home
      sequence:
      - if:
        - condition: device
          type: is_off
          device_id: 996ea9226cbd0c2fe7ddb21af32045f9
          entity_id: 9dc6d48cc35cec309bb214c849c5c7df
          domain: switch
          enabled: true
        then:
        - type: turn_on
          device_id: 996ea9226cbd0c2fe7ddb21af32045f9
          entity_id: 9dc6d48cc35cec309bb214c849c5c7df
          domain: switch
    - conditions:
      - condition: numeric_state
        entity_id: sensor.icemaker_water_temperature
        above: input_number.ice_maker_water_high_temperature_threshold
      sequence:
      - if:
        - condition: device
          type: is_off
          device_id: 996ea9226cbd0c2fe7ddb21af32045f9
          entity_id: 9dc6d48cc35cec309bb214c849c5c7df
          domain: switch
        then:
        - type: turn_on
          device_id: 996ea9226cbd0c2fe7ddb21af32045f9
          entity_id: 9dc6d48cc35cec309bb214c849c5c7df
          domain: switch
        - delay:
            hours: 0
            minutes: 15
            seconds: 0
            milliseconds: 0
        - type: turn_off
          device_id: 996ea9226cbd0c2fe7ddb21af32045f9
          entity_id: 9dc6d48cc35cec309bb214c849c5c7df
          domain: switch
    default:
    - type: turn_off
      device_id: 996ea9226cbd0c2fe7ddb21af32045f9
      entity_id: 9dc6d48cc35cec309bb214c849c5c7df
      domain: switch
  mode: restart
- id: '1626459943924'
  alias: Water on off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.button_1
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - switch.button_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.button_1
        state: 'on'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.back_garden_irrigation_valve
        data: {}
    - conditions:
      - condition: state
        entity_id: switch.button_1
        state: 'off'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.back_garden_irrigation_valve
        data: {}
    default: []
  mode: single
- id: '1634179399421'
  alias: Notify when Lucy leaves her pump at home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.lucy
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 10
      seconds: 0
    enabled: true
  condition:
  - condition: zone
    entity_id: device_tracker.insulin_pump_controller
    zone: zone.home
  action:
  - data:
      message: Lucy's Insulin pump controller may have been left at Home!
      data:
        color: red
        channel: PumpController
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:pump
      title: Pump Controller
    action: notify.mobile_app_rich_mob_app
  - data:
      message: Lucy Pump Controller was left at Home!
    action: notify.mobile_app_lucy_mob_app
  mode: single
- id: '1635187432504'
  alias: Outside Lights Motion Slow Fade
  description: Main Lights Profile
  triggers:
  - type: motion
    device_id: 99689212065c11ebbd2ecbef1587dfe1
    entity_id: binary_sensor.drive_high_16_vmd4_camera1profile3
    domain: binary_sensor
    trigger: device
    enabled: false
  - type: opened
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
    trigger: device
  - type: occupied
    device_id: a4d9035dcf8d5c8cad4f0a74d46b0c86
    entity_id: c0aa981ae14899cc5d0ad845e5dfddb9
    domain: binary_sensor
    trigger: device
  conditions:
  - condition: or
    conditions:
    - condition: sun
      after: sunset
      after_offset: 00:00:00
      before_offset: -00:30:00
      before: sunrise
    - condition: sun
      before: sunrise
      before_offset: -00:30:00
      enabled: false
  actions:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.outside_lights_late_night_start_time
        before: input_datetime.outside_lights_late_night_end_time
      sequence:
      - target:
          entity_id:
          - light.outside_1_down
          - light.outside_2_down
          - light.outside_3_down
          - light.outside_4_down
          - light.outside_5_down
        data:
          brightness_pct: '{{ states(''input_number.outside_lights_late_night_brightness'')
            | int(0) }}'
          color_temp: 370
          transition: 5
        action: light.turn_on
      - delay:
          minutes: '{{ states(''input_number.outside_lights_late_night_time_on_minutes'')
            | int(0) }}'
    default:
    - target:
        entity_id:
        - light.outside_1_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_2_down
      data:
        color_temp: 370
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_3_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_4_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_5_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_4_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_3_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_2_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_1_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        minutes: '{{ states(''input_number.outside_lights_early_night_time_on_minutes'')
          | int(0) }}'
  - target:
      entity_id:
      - light.outside_1_up
      - light.outside_1_down
      - light.outside_2_up
      - light.outside_2_down
      - light.outside_3_up
      - light.outside_3_down
      - light.outside_4_up
      - light.outside_4_down
      - light.outside_5_down
    data:
      transition: 20
    action: light.turn_off
  - if:
    - condition: time
      after: '16:00:00'
    - condition: time
      before: '23:00:00'
    then:
    - delay:
        hours: 0
        minutes: 0
        seconds: 2
        milliseconds: 0
    - target:
        entity_id: light.outside_2_down
      data:
        color_temp: 250
        brightness_pct: 1
      action: light.turn_on
  mode: restart
- id: '1652210144322'
  alias: House Doorbell - Local Notify
  description: CCTV needs to have anonymous viewer enabled or I need to pass the username
    in the media_content_id. Note, during testing you need to turn off the media_player
    device after each test, else is will not show the video again. (local media-source
    is 30 seconds behind!)
  triggers:
  - type: turned_on
    device_id: b03ab12c707340e8849888171a79caed
    entity_id: 7c6911b35b21b35fae0f55d88984a7d9
    domain: binary_sensor
    trigger: device
  conditions:
  - condition: or
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
  actions:
  - data:
      message: Front door
    action: notify.google_assistant_sdk
  - data: {}
    target:
      entity_id:
      - media_player.office_display
      - media_player.living_room_display
      - media_player.kitchen_display
      - media_player.dining_room_display
    enabled: false
    action: media_player.turn_off
  - data:
      message: Ding! Dong! Someone is at the door
      target:
      - bathroom_speaker
      - garage
      - guest_bedroom
      - bedroom
    enabled: false
    action: notify.google_assistant_sdk
  - target:
      entity_id: media_player.office_display
    data:
      media_content_id: media-source://camera/camera.front_door_11
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Front Door .11
      thumbnail: /api/camera_proxy/camera.front_door_11
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
    action: media_player.play_media
  - target:
      entity_id: media_player.living_room_display
    data:
      media_content_id: media-source://camera/camera.front_door_11
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Front Door .11
      thumbnail: /api/camera_proxy/camera.front_door_11
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
    action: media_player.play_media
  - target:
      entity_id: media_player.dining_room_display
    data:
      media_content_id: media-source://camera/camera.drive_high_16
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Drive High .16
      thumbnail: /api/camera_proxy/camera.drive_high_16
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
    action: media_player.play_media
  - target:
      entity_id: media_player.kitchen_display
    data:
      media_content_id: media-source://camera/camera.front_door_11
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Front Door .11
      thumbnail: /api/camera_proxy/camera.front_door_11
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
    action: media_player.play_media
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
    enabled: false
  - parallel:
    - data:
        media_content_id: http://192.168.4.11/axis-cgi/mjpg/video.cgi
        media_content_type: image/jpg
      target:
        entity_id:
        - media_player.office_display
        - media_player.living_room_display
        - media_player.kitchen_display
      enabled: false
      action: media_player.play_media
    - data:
        media_content_id: media-source://camera/camera.front_door_11
        media_content_type: application/vnd.apple.mpegurl
      target:
        entity_id:
        - media_player.office_display
        - media_player.living_room_display
        - media_player.kitchen_display
      enabled: false
      action: media_player.play_media
    - data:
        format: hls
        media_player: media_player.office_display
      target:
        entity_id: camera.front_door_11_onvif_video
      enabled: false
      action: camera.play_stream
    - data:
        format: hls
        media_player: media_player.office_display
      target:
        entity_id:
        - camera.front_door_11_mjpg
      enabled: false
      action: camera.play_stream
    - data:
        format: hls
        media_player: media_player.office_display
      target:
        entity_id:
        - camera.front_door_11
      enabled: false
      action: camera.play_stream
    - data:
        message: Ding! Dong! Someone is at the door
        entity_id: media_player.bathroom_speaker, media_player.garage, media_player.guest_bedroom
        cache: true
      enabled: false
      action: tts.google_translate_say
    - data:
        message: Ding! Dong! Someone is at the door
        target:
        - bathroom_speaker
        - garage
        - guest_bedroom
        - bedroom
      action: notify.google_assistant_sdk
    - target:
        entity_id: media_player.living_room_display
      data:
        media_content_id: media-source://camera/camera.front_door_11_onvif_video
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Front Door .11 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.front_door_11_onvif_video
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
      action: media_player.play_media
    - target:
        entity_id: media_player.dining_room_display
      data:
        media_content_id: media-source://camera/camera.drive_higher_21_onvif_profile_1_h264
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Drive Higher .21 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.drive_higher_21_onvif_profile_1_h264
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
      action: media_player.play_media
    - target:
        entity_id: media_player.office_display
      data:
        media_content_id: media-source://camera/camera.front_door_11_onvif_video
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Front Door .11 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.front_door_11_onvif_video
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
      enabled: true
      action: media_player.play_media
    - target:
        entity_id: media_player.kitchen_display
      data:
        media_content_id: media-source://camera/camera.front_door_11_onvif_video
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Front Door .11 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.front_door_11_onvif_video
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
      action: media_player.play_media
    enabled: false
  mode: single
- id: '1661547535107'
  alias: Kitchen Motion Occupancy (Rev 1) (With Christmas Tree)
  description: Triggered in motion, restarted on fresh motion detection (sensors set
    to 90 second timeout). On timer delay turn-off section, checks if motion is still
    being detected, to avoid issue with motion being continuity detected for entire
    delay period (otherwise lights would turn off, as no new motion events had been
    generated, even though motion is still true). Could set the automation to only
    turn off lights when no motion is detected, but this may risk the lights staying
    on all the time if off-motion event is not triggered.
  triggers:
  - type: occupied
    device_id: ae2a09aff2b5e7ef8155aa0aea2ae997
    entity_id: 7183e77199aa9682d16c03a011352ead
    domain: binary_sensor
    trigger: device
  - type: occupied
    device_id: 8f93f025843a9a3da3c079739843e408
    entity_id: 396dab2b22de1017ada5e53201d6abe0
    domain: binary_sensor
    trigger: device
  - event_type: kitchen_occupied
    trigger: event
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: time
        after: 02:00:00
        before: 07:00:00
      sequence:
      - data:
          transition: 2
          brightness_pct: 50
        target:
          device_id: 061e0dd32d43fd2355543b4f4db149ac
        action: light.turn_on
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - choose:
        - conditions:
          - condition: or
            conditions:
            - type: is_motion
              condition: device
              device_id: ae2a09aff2b5e7ef8155aa0aea2ae997
              entity_id: binary_sensor.kitchen_motion_sensor_1_occupancy
              domain: binary_sensor
            - type: is_motion
              condition: device
              device_id: 8f93f025843a9a3da3c079739843e408
              entity_id: binary_sensor.kitchen_motion_sensor_2_occupancy
              domain: binary_sensor
          sequence:
          - event: kitchen_occupied
            event_data: {}
        default:
        - data:
            transition: 20
          action: light.turn_off
          target:
            device_id: c8b85bb0a92c1f69c117b9217a6c86a8
    default:
    - data:
        transition: 2
        brightness_pct: 100
      action: light.turn_on
      target:
        device_id: c8b85bb0a92c1f69c117b9217a6c86a8
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        device_id: b34f59aa5f7588a139a9162093de3262
    - if:
      - condition: state
        entity_id: light.christmas_tree_lights
        state: 'off'
        enabled: true
      then:
      - data: {}
        target:
          entity_id: light.christmas_tree_lights
        enabled: true
        action: light.turn_on
      enabled: false
    - delay:
        hours: 0
        minutes: 10
        seconds: 0
        milliseconds: 0
    - choose:
      - conditions:
        - condition: or
          conditions:
          - type: is_occupied
            condition: device
            device_id: ae2a09aff2b5e7ef8155aa0aea2ae997
            entity_id: 7183e77199aa9682d16c03a011352ead
            domain: binary_sensor
          - type: is_occupied
            condition: device
            device_id: 8f93f025843a9a3da3c079739843e408
            entity_id: 396dab2b22de1017ada5e53201d6abe0
            domain: binary_sensor
        sequence:
        - event: kitchen_occupied
          event_data: {}
      default:
      - data:
          transition: 20
        action: light.turn_off
        target:
          device_id: c8b85bb0a92c1f69c117b9217a6c86a8
      - data: {}
        target:
          entity_id: light.christmas_tree_lights
        enabled: false
        action: light.turn_off
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          device_id: b34f59aa5f7588a139a9162093de3262
  mode: restart
- id: '1667140350137'
  alias: Smoke Machine - Lights
  description: ' [Restarts]

    '
  trigger:
  - type: motion
    platform: device
    device_id: 853ca02c816df4ce4860c07060837a6a
    entity_id: binary_sensor.front_door_11_vmd4_camera1profile2
    domain: binary_sensor
    enabled: false
  - type: motion
    platform: device
    device_id: 83dd8340e23fb86fef21b09a22a57929
    entity_id: binary_sensor.drive_higher_21_vmd4_camera1profile2
    domain: binary_sensor
  - platform: state
    entity_id:
    - switch.smoke_machine
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.0x5c0272fffec8ba7e
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
    enabled: true
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.0x5c0272fffec8ba7e
  mode: restart
- id: '1667142302076'
  alias: Smoke Machine Automation - Reset Switch
  description: Remote is "Off" only, so this resets the switch back to "On"
  trigger:
  - platform: state
    entity_id:
    - switch.smoke_machine
    to: 'off'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  mode: single
- id: '1671628022949'
  alias: Christmas Lights Timer
  description: ''
  triggers:
  - event: sunset
    id: 'ON'
    trigger: sun
    offset: -00:20:00
  - at: '23:30:00'
    id: 'OFF'
    trigger: time
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - data: {}
        target:
          entity_id:
          - light.christmas_tree_lights
        action: light.turn_on
      - data: {}
        target:
          entity_id:
          - light.christmas_garden_lights
        action: light.turn_on
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - data: {}
        action: light.turn_off
        target:
          entity_id:
          - light.christmas_tree_lights
      - data: {}
        action: light.turn_off
        target:
          entity_id:
          - light.christmas_garden_lights
  mode: single
- id: '1674941449370'
  alias: Energenie eTRV Calibrate Once a Week
  description: ''
  triggers:
  - at: 08:00:00
    trigger: time
  conditions:
  - condition: time
    weekday:
    - sun
  actions:
  - device_id: 061f81b04836d8e074d7e2542b21767c
    domain: climate
    entity_id: 85fd7edb412d78a913c1bf7147db79a5
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: a46ff2f2479fd7381a267a77a12734ae
    domain: climate
    entity_id: 1dc6cd56095c82c66dc458c436527a3d
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: e79922e5a787ed8db81ee253715ea823
    domain: climate
    entity_id: 62b634275f68a5e6e82986ad6fe56f13
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: 55d26468639a4f1005742215878de937
    domain: climate
    entity_id: 168ee9f59e0b15f8719800c92f16f8c9
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: f694a04cab17376f9ccbb97b67b6365d
    domain: climate
    entity_id: a9f2ad8cd9cfb413cb59e78f56bcca5b
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: 9fb3ba0a224918b6c1b43afbcc3c1f23
    domain: climate
    entity_id: f175045657712af0731ec9edf74b1479
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: d87bf9712abd725b400a815405c374ac
    domain: climate
    entity_id: e46f27494a4d65b24c09f340418a9438
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: 71e963eadf1071d0f777742a6fbb5cf9
    domain: climate
    entity_id: b8a6f7260b91a515810a154c4bb51486
    type: set_preset_mode
    preset_mode: Exercise Valve
  - device_id: a9d1acaaf374a3234065ce3dca7d9f04
    domain: climate
    entity_id: c56d5518b41049387e082722202d573b
    type: set_preset_mode
    preset_mode: Exercise Valve
  mode: single
- id: '1689364304362'
  alias: Irrigation Notify When Controllers Goes Offline
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.ic_back_status
    to:
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.ic_front_status
    to:
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Irrigation Controller Offline
      data:
        channel: Irrigation
        importance: default
        visibility: public
        notification_icon: mdi:water-alert-outline
    enabled: true
  mode: queued
- id: '1694715667268'
  alias: Parcel Box Opened Notify - Rev 2
  description: Take photo first, rather than using camera_proxy, as camera_proxy only
    takes the image when the notification is delivered, which may be later if signal
    is poor.
  triggers:
  - type: opened
    device_id: 2aadd916ad46270ecda5ab407a461e6c
    entity_id: binary_sensor.parcel_box_contact
    domain: binary_sensor
    enabled: false
    trigger: device
  - entity_id:
    - binary_sensor.parcel_box_contact
    from: 'off'
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      filename: /media/garage.jpg
    target:
      entity_id: camera.garage_13
    action: camera.snapshot
  - data:
      title: Parcel Box
      message: Parcel Box Opened
      data:
        image: /media/local/garage.jpg
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    action: notify.mobile_app_rich_mob_app
  - data:
      title: Parcel Box
      message: Parcel Box Opened
      data:
        image: /media/local/garage.jpg
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    action: notify.mobile_app_lucy_mob_app
  - data:
      filename: /media/garage2.jpg
    target:
      entity_id:
      - camera.drive_higher_21
    action: camera.snapshot
  - data:
      title: Parcel Box
      message: Parcel Box Opened Photo 2
      data:
        image: /media/local/garage2.jpg
        color: green
        channel: ParcelBox2
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
        sticky: 'true'
    action: notify.mobile_app_rich_mob_app
  - data:
      title: Parcel Box
      message: Parcel Box Opened Photo 2
      data:
        image: /media/local/garage2.jpg
        color: green
        channel: ParcelBox2
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
        sticky: 'true'
    action: notify.mobile_app_lucy_mob_app
  - data:
      message: Parcel Box Opened
      target:
      - office
    enabled: true
    action: notify.google_assistant_sdk
  mode: single
- id: '1694727006658'
  alias: House Doorbell - External Notify
  description: Take photo first, rather than using camera_proxy, as camera_proxy only
    takes the image when the notification is delivered, which may be later if signal
    is poor.
  triggers:
  - type: turned_on
    device_id: b03ab12c707340e8849888171a79caed
    entity_id: 7c6911b35b21b35fae0f55d88984a7d9
    domain: binary_sensor
    trigger: device
  conditions: []
  actions:
  - parallel:
    - if:
      - condition: state
        entity_id: sensor.rich_mob_app_ringer_mode
        state: normal
      - condition: state
        entity_id: sensor.rich_mob_app_do_not_disturb_sensor
        state: 'off'
      - condition: state
        entity_id: sensor.rich_mob_app_phone_state
        state: idle
      then:
      - data:
          data:
            channel: DoorbellTTS2
            importance: high
            visibility: public
            tts_text: Ding Dong Doorbell
            media_stream: alarm_stream_max
            ttl: 0
            priority: high
          message: TTS
        action: notify.mobile_app_rich_mob_app
    - if:
      - condition: state
        entity_id: sensor.lucy_mob_app_ringer_mode
        state: normal
      - condition: state
        entity_id: sensor.lucy_mob_app_do_not_disturb_sensor
        state: 'off'
      - condition: state
        entity_id: sensor.lucy_mob_app_phone_state
        state: idle
      then:
      - data:
          data:
            channel: DoorbellTTS2
            importance: high
            visibility: public
            tts_text: Ding Dong Doorbell
            media_stream: alarm_stream_max
            ttl: 0
            priority: high
          message: TTS
        action: notify.mobile_app_lucy_mob_app
    - data:
        filename: /media/frontdoor.jpg
      target:
        entity_id: camera.front_door_11
      action: camera.snapshot
  - parallel:
    - data:
        data:
          image: /media/local/frontdoor.jpg
          color: red
          channel: DoorbellImage2
          vibrationPattern: 100,200,100,100,75,25,100,200,100,500,100,200,100,500
          importance: high
          timeout: 86400
          visibility: public
          notification_icon: mdi:door
          ttl: 0
          priority: high
          sticky: 'true'
        message: ' '
      action: notify.mobile_app_rich_mob_app
    - data:
        data:
          image: /media/local/frontdoor.jpg
          color: red
          channel: DoorbellImage2
          vibrationPattern: 100,200,100,100,75,25,100,200,100,500,100,200,100,500
          importance: high
          timeout: 86400
          visibility: public
          notification_icon: mdi:door
          ttl: 0
          priority: high
          sticky: 'true'
        message: ' '
      action: notify.mobile_app_lucy_mob_app
  mode: single
- id: '1694790204906'
  alias: Front door opened with no one home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    enabled: true
  action:
  - service: camera.snapshot
    data:
      filename: /media/frontdoor_sensor.jpg
    target:
      entity_id: camera.front_door_11
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/frontdoor_sensor.jpg
        color: red
        channel: DoorOpen1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/frontdoor_sensor.jpg
        color: red
        channel: DoorOpen1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  mode: single
- id: '1694795158536'
  alias: Back door opened but no one is home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: dd6c9ee012d55a6e6f1b0ef375270d86
    entity_id: 3cd6c236c41a010470145e104bd7f36f
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    enabled: true
  action:
  - service: camera.snapshot
    data:
      filename: /media/garden.jpg
    target:
      entity_id: camera.garden_18
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Back Door
      message: Back door opened, but no one is home!
      data:
        image: /media/local/garden.jpg
        color: red
        channel: BackDoorOpen
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Back Door
      message: Back door opened, but no one is home!
      data:
        image: /media/local/garden.jpg
        color: red
        channel: BackDoorOpen
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  mode: single
- id: '1696178796762'
  alias: Living Room TV Speakers Auto On-Off
  description: 'Turn on living room speakers when Samsung Smart TV is turned on.

    '
  triggers:
  - type: changed_states
    device_id: 99a89cc7d2a737c382a99397821a0522
    entity_id: bff78da4f1f7d24e59e81c86729d0ceb
    domain: media_player
    trigger: device
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: device
        device_id: 99a89cc7d2a737c382a99397821a0522
        domain: media_player
        entity_id: bff78da4f1f7d24e59e81c86729d0ceb
        type: is_on
      sequence:
      - data: {}
        target:
          entity_id:
          - switch.smart_plug_1_tv_speakers
        action: switch.turn_on
    - conditions:
      - condition: device
        device_id: 99a89cc7d2a737c382a99397821a0522
        domain: media_player
        entity_id: bff78da4f1f7d24e59e81c86729d0ceb
        type: is_off
      sequence:
      - data: {}
        target:
          entity_id:
          - switch.smart_plug_1_tv_speakers
        action: switch.turn_off
    enabled: true
  mode: restart
- id: '1697309989912'
  alias: Lucy Location Watchdog
  description: Lucy has no mobile data on her phone, so when she is away without wifi,
    the location automations at home will continue to think she is at home, causing
    issues. This automation sets Lucy as away after a time of no location updates,
    to ensure the automations work.
  trigger:
  - platform: template
    value_template: '{% if ((as_timestamp( now()) - as_timestamp(states.person.lucy.last_updated))
      | int) > 1200 %}true{% endif %}'
  condition:
  - condition: template
    value_template: '{% if ((as_timestamp( now()) - as_timestamp(states.person.lucy.last_updated))
      | int) > 1200 %}true{% endif %}'
  action:
  - service: device_tracker.see
    data:
      dev_id: google_maps_114635444798949098363
      location_name: not_home
  mode: single
- id: '1697311341807'
  alias: Turn on hallway lights for a moment when we get home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  condition:
  - condition: sun
    after: sunset
    after_offset: 00:30
    before: sunrise
  action:
  - service: light.turn_on
    data:
      transition: 20
      kelvin: 2700
    target:
      device_id: 0e1ed242a4670cea76f671cc12039968
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - choose:
    - conditions:
      - type: is_open
        condition: device
        device_id: 86b815b15cbf84a75984db3b46f6cc17
        entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
        domain: binary_sensor
      sequence:
      - wait_for_trigger:
        - type: not_opened
          platform: device
          device_id: 86b815b15cbf84a75984db3b46f6cc17
          entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
          domain: binary_sensor
        timeout:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.downstairs_hallway_light
    - conditions:
      - type: is_not_open
        condition: device
        device_id: 86b815b15cbf84a75984db3b46f6cc17
        entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
        domain: binary_sensor
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.downstairs_hallway_light
    enabled: false
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.downstairs_hallway_light
  mode: restart
- id: '1697311647945'
  alias: Garage door opened but no one is home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 6d3f659d3b1cf6534dc09fa4fcca868d
    entity_id: 17edc1d1385c61490d54f583bbb34c2b
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    enabled: true
  action:
  - service: camera.snapshot
    data:
      filename: /media/garage_sensor.jpg
    target:
      entity_id: camera.garage_13
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/garage_sensor.jpg
        color: red
        channel: DoorOpen3
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/garage_sensor.jpg
        color: red
        channel: DoorOpen3
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  mode: single
- id: '1697388186314'
  alias: Energenie eTRV Error Handler
  description: ''
  triggers:
  - type: problem
    device_id: a46ff2f2479fd7381a267a77a12734ae
    entity_id: cb5fcb489d2672ac9dad67779d1b5c08
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: e79922e5a787ed8db81ee253715ea823
    entity_id: 240181bd9a3ee5f41a115bad8769841b
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: 061f81b04836d8e074d7e2542b21767c
    entity_id: a050971712c4335b998b67489b3e07b8
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: 55d26468639a4f1005742215878de937
    entity_id: c8108715bdfc512a18dfbbe5124bee96
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: f694a04cab17376f9ccbb97b67b6365d
    entity_id: a1222f8d5b3d6a922a9e71ab061f2292
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: 9fb3ba0a224918b6c1b43afbcc3c1f23
    entity_id: 8e53453c39e12d27442ff5b35a6deced
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: d87bf9712abd725b400a815405c374ac
    entity_id: 7065503bc93ebbeb606463976d04f999
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: 71e963eadf1071d0f777742a6fbb5cf9
    entity_id: fc32779959e9512a07e24e50efad3521
    domain: binary_sensor
    trigger: device
  - type: problem
    device_id: a9d1acaaf374a3234065ce3dca7d9f04
    entity_id: 0e45a0c11ea5c5863f199013dec69f52
    domain: binary_sensor
    trigger: device
  conditions: []
  actions:
  - data:
      title: Energenie eTRV Error
      message: Energenie eTRV Error. This was triggered by {{ trigger.id }}
      data:
        color: red
        channel: EnergenieeTRVError
        vibrationPattern: 100,200,100,200,100,200,100,200
        visibility: public
        notification_icon: mdi:alert-circle-outline
    action: notify.mobile_app_rich_mob_app
  mode: single
- id: '1697572691572'
  alias: Simulate Presence Lights When Away
  description: Automation Simulate Presence / Occupancy Simulation. Runs single and
    if we get home it will turn off all the lights (cancel the run)
  triggers:
  - event_type: event_simulate_presence_loop
    trigger: event
    enabled: true
  - event: sunset
    offset: +00:30:00
    trigger: sun
  - entity_id:
    - person.richard
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 20
      seconds: 0
    trigger: state
  - entity_id:
    - person.lucy
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 20
      seconds: 0
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.simulate_presence_enable
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: time
    enabled: true
    before: 01:30:00
    after: '14:00:00'
  - condition: state
    entity_id: person.richard
    state: not_home
  - condition: state
    entity_id: person.lucy
    state: not_home
  actions:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.presence_simulation_lights_group
    alias: 'Perform action ''Light: Turn off'' - Do this first in case the automation
      gets restarted'
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
    alias: Wait for RF to send commands
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights_group'', ''entity_id'')
        | random }}'
    action: light.turn_on
    alias: 'Light: Turn on - Select light at random from light group'
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
    alias: Wait for RF to send commands
  - delay: 00:{{ (range(10, 30) | random) }}:00
    alias: Delay for random amount of time
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.presence_simulation_lights_group
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.presence_simulation_lights_group
    alias: 'Perform action ''Light: Turn off'' - Do this first in case the automation
      gets restarted'
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
    alias: Wait for RF to send commands
  - event: event_simulate_presence_loop
    enabled: true
  - action: automation.trigger
    metadata: {}
    data:
      skip_condition: true
    target:
      entity_id: automation.simulate_presence_lights_dev
    enabled: false
  mode: restart
- id: '1702742847276'
  alias: Office Blinds Schedule + Remote Control
  description: "Opens in the morning, only if Richard is home. \nCloses in the evening
    at dusk."
  triggers:
  - at: 09:00:00
    id: open
    trigger: time
  - domain: mqtt
    device_id: ca61296154562d84a7271001aba10aa5
    type: action
    subtype: open
    trigger: device
    id: open
  - event: sunset
    id: close
    trigger: sun
    offset: +00:30:00
  - domain: mqtt
    device_id: ca61296154562d84a7271001aba10aa5
    type: action
    subtype: close
    trigger: device
    id: close
  - domain: mqtt
    device_id: ca61296154562d84a7271001aba10aa5
    type: action
    subtype: stop
    trigger: device
    id: stop
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - close
      sequence:
      - target:
          device_id: 32f5bc90bdea3d225d1abb66083405ac
        data: {}
        action: cover.close_cover
    - conditions:
      - condition: trigger
        id:
        - open
      - condition: zone
        entity_id: person.richard
        zone: zone.home
      sequence:
      - data: {}
        action: cover.open_cover
        target:
          device_id: 32f5bc90bdea3d225d1abb66083405ac
    - conditions:
      - condition: trigger
        id:
        - stop
      sequence:
      - action: cover.stop_cover
        target:
          device_id:
          - 32f5bc90bdea3d225d1abb66083405ac
        data: {}
  mode: single
- id: '1705695753761'
  alias: Bathroom Audio Remote - Google Home Speaker
  description: 'Triggered by an IKEA five-button Zigbee remote through zigbee2mqtt,
    this automation controls the Bluetooth functionality of a Google Home/Nest Mini
    speaker.


    Due to limitations in Home Assistant, direct control of a Google Home/Nest speaker''s
    Bluetooth is not possible. To circumvent this, a toggle "helper" is employed,
    acting as a trigger within a Google Home Automation to react to changes in the
    toggle''s state and controls the Bluetooth state.


    Once my phone is Bluetooth-paired to the Google Home/Nest speaker, volume control
    commands issued to the speaker through Home Assistant are seamlessly relayed to
    the phone. However, it''s important to note that these commands are presently
    limited to pause and volume adjustments within Home Assistant, even though voice
    commands can be used to control next/previous track functions. This is a limitation
    of Google Home/Nest Mini, next/previous track works with Home Home/Nest Hubs just
    fine.'
  trigger:
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_up_click
    discovery_id: 0x000b57fffe38a445 action_brightness_up_click
    id: up_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_down_click
    discovery_id: 0x000b57fffe38a445 action_brightness_down_click
    id: down_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: toggle
    discovery_id: 0x000b57fffe38a445 action_toggle
    id: middle_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_left_click
    discovery_id: 0x000b57fffe38a445 action_arrow_left_click
    id: left_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_right_click
    discovery_id: 0x000b57fffe38a445 action_arrow_right_click
    id: right_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_up_hold
    discovery_id: 0x000b57fffe38a445 action_brightness_up_hold
    id: hold_up
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_left_hold
    discovery_id: 0x000b57fffe38a445 action_arrow_left_hold
    id: hold_left
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_right_hold
    discovery_id: 0x000b57fffe38a445 action_arrow_right_hold
    id: hold_right
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_down_hold
    discovery_id: 0x000b57fffe38a445 action_brightness_down_hold
    id: hold_down
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - up_click
      sequence:
      - service: media_player.volume_up
        metadata: {}
        data: {}
        target:
          device_id: 30e5174b145711eb88da47ba37409372
    - conditions:
      - condition: trigger
        id:
        - down_click
      sequence:
      - service: media_player.volume_down
        metadata: {}
        data: {}
        target:
          device_id: 30e5174b145711eb88da47ba37409372
    - conditions:
      - condition: trigger
        id:
        - middle_click
      sequence:
      - service: media_player.media_play_pause
        metadata: {}
        data: {}
        target:
          device_id: 30e5174b145711eb88da47ba37409372
    - conditions:
      - condition: trigger
        id:
        - left_click
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
    - conditions:
      - condition: trigger
        id:
        - right_click
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
    - conditions:
      - condition: trigger
        id:
        - hold_up
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
        enabled: false
    - conditions:
      - condition: trigger
        id:
        - hold_down
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
        enabled: false
  mode: single
- id: '1706448756375'
  alias: Heating Follow Radiator Demand
  description: Run only between set hours and only if someone is home
  triggers:
  - entity_id:
    - climate.living_room_radiator
    attribute: temperature
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 2
    enabled: true
  - trigger: numeric_state
    entity_id:
    - sensor.living_room_radiator_temperature_delta
    above: 0.2
  - trigger: numeric_state
    entity_id:
    - sensor.living_room_radiator_temperature_delta
    below: -1
  - entity_id:
    - climate.living_room_radiator
    attribute: current_temperature
    trigger: state
    for:
      hours: 0
      minutes: 10
      seconds: 0
    enabled: false
  conditions:
  - alias: Check if anyone (OR) is home
    condition: or
    conditions:
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    - condition: zone
      entity_id: person.richard
      zone: zone.home
      enabled: true
  - condition: time
    after: 09:00:00
    before: 01:00:00
  actions:
  - if:
    - condition: numeric_state
      entity_id: sensor.living_room_radiator_temperature_delta
      below: -1
    then:
    - action: climate.set_temperature
      target:
        entity_id: climate.hallway
      data:
        temperature: '{{ (state_attr(''climate.hallway'', ''current_temperature'')|round(1))
          + 0.5 }}'
  - if:
    - condition: numeric_state
      entity_id: sensor.living_room_radiator_temperature_delta
      above: 0.2
    then:
    - action: climate.set_temperature
      target:
        entity_id: climate.hallway
      data:
        temperature: '{{ (state_attr(''climate.hallway'', ''current_temperature'')|round(0))
          - 1 }}'
  mode: single
- id: '1708473467198'
  alias: Living Room Fairy Lights Follow Other Lights
  description: ''
  triggers:
  - type: turned_on
    device_id: 6e0ded4c47c76900af05e933f9348a46
    entity_id: 020edf627efb532c118e3a6362fbc1a4
    domain: light
    id: 'on'
    trigger: device
  - type: turned_off
    device_id: 6e0ded4c47c76900af05e933f9348a46
    entity_id: 020edf627efb532c118e3a6362fbc1a4
    domain: light
    id: 'off'
    trigger: device
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.fairy_lights
    - conditions:
      - condition: trigger
        id:
        - 'off'
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.fairy_lights
  mode: restart
- id: '1710954157058'
  alias: Pull Water meter data every hour
  description: Warning this will kill the battery if overused
  triggers:
  - minutes: '10'
    trigger: time_pattern
  conditions: []
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: button.water_meter_request
    action: button.press
  - repeat:
      count: 3
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: button.water_meter_request
        action: button.press
      - wait_for_trigger:
        - type: not_running
          device_id: 7e66c8ead1ec91a4eb0011534f720f8e
          entity_id: 587930524e77140f4fffabeaf43a7b1b
          domain: binary_sensor
          trigger: device
        continue_on_timeout: false
    enabled: false
  mode: single
- id: '1714268450987'
  alias: Run off UPS
  description: ''
  trigger:
  - platform: time
    at: 09:40:00
  condition:
  - condition: time
    weekday:
    - sun
  action:
  - type: calibrate_start
    device_id: 2852d68eacdcae952e6fd84251240afb
    domain: nut
  mode: single
- id: '1715801236786'
  alias: Tile Tracker Low Battery Alert
  description: ''
  trigger:
  - platform: time
    at: '11:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: device_tracker.small_water_bottle
        attribute: last_timestamp
        state: timedelta(days=4)
      - condition: template
        value_template: ' {{ now() - state_attr(''device_tracker.cold_sore_cream'',
          ''last_timestamp'') | as_datetime > timedelta(days=4) }}'
      sequence: []
  mode: single
- id: '1720117742034'
  alias: Tea Brewing Timer
  description: ''
  triggers:
  - domain: mqtt
    device_id: 71d5510f501b15c01210dff88a9c5e31
    type: action
    subtype: 'on'
    trigger: device
    alias: Kitchen Ikea Zigbee Button Pressed
  conditions: []
  actions:
  - data:
      message: 3 and a half minute tea timer started
    enabled: false
    action: notify.google_assistant_sdk
  - repeat:
      count: 1
      sequence:
      - device_id: 061e0dd32d43fd2355543b4f4db149ac
        domain: light
        entity_id: cf6ba794fa1a1a67815ff4de4a57bb2a
        type: flash
  - delay:
      hours: 0
      minutes: 3
      seconds: 30
      milliseconds: 0
  - alias: 'Send to targets separately, to avoid queuing delay '
    parallel:
    - data:
        message: Tea timer, beep! beep!
        target: dining room
      enabled: true
      action: notify.google_assistant_sdk
    - data:
        message: Tea timer, beep! beep! beep!
        target: kitchen
      enabled: true
      action: notify.google_assistant_sdk
    - data:
        message: Tea timer!
        target: office
      enabled: true
      action: notify.google_assistant_sdk
    - data:
        message: Tea timer, bing bong. Lucy, you are loved!
        target: living room
      enabled: true
      action: notify.google_assistant_sdk
  mode: restart
- id: '1720118905430'
  alias: Broadcast dinner almost ready
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 71d5510f501b15c01210dff88a9c5e31
    type: action
    subtype: 'off'
  condition: []
  action:
  - service: notify.google_assistant_sdk
    data:
      message: Dinner is ready.
    enabled: true
  - service: notify.google_assistant_sdk
    data:
      message: Dinner is ready Richard
      target:
      - office
      - living room
      - kichen
      - dining room
    enabled: false
  - service: notify.google_assistant_sdk
    data:
      message: Hello sweetie, dinner is almost ready. Just wanted to let you know.
    enabled: false
  mode: single
- id: '1720571709980'
  alias: Reboot bathroom speaker twice a day
  description: For some reason my Google home seems to get stuck in a loop and becomes
    unresponsive. This automation forces it to reboot as a workaround.
  trigger:
  - platform: time
    at: '11:00:00'
  - platform: time
    at: 00:00:01
  condition:
  - condition: device
    device_id: 30e5174b145711eb88da47ba37409372
    domain: media_player
    entity_id: 92395fa37a44ae46a95d786ecf933dd3
    type: is_off
  action:
  - metadata: {}
    data: {}
    target:
      device_id: 127737e2a86b116da4274dcb735b0349
    action: google_home.reboot_device
  mode: single
- id: '1721088060009'
  alias: Remote control activate bedtime lights
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 26fbc14fff6a78d4c66a9f30fb62938b
    type: action
    subtype: arrow_right_hold
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.bedtime_mode
  mode: single
- id: '1722123544585'
  alias: Garden Lights Motion
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: dd6c9ee012d55a6e6f1b0ef375270d86
    entity_id: 3cd6c236c41a010470145e104bd7f36f
    domain: binary_sensor
  condition:
  - condition: sun
    after: sunset
    after_offset: '0'
    before: sunrise
  action:
  - data:
      kelvin: 2700
      brightness_pct: 100
      transition: 2
    target:
      entity_id: light.garden_lights
    action: light.turn_on
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - data:
      transition: 10
    target:
      device_id: d074b346c18b807df9deee8fe2408e7a
    action: light.turn_off
  mode: restart
- id: '1727031709340'
  alias: 'Trigger bunny food announcement '
  description: ''
  trigger:
  - type: turned_on
    platform: device
    device_id: ddd7697eb54412082fa357f4b4858d2f
    entity_id: bc7ebc36dd87f8aa11180357b95ab0ed
    domain: binary_sensor
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.bunny_feeder_paf_02_feeding
    from: 'off'
    to: 'on'
  condition: []
  action:
  - action: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: script.announce_bunny_food_time
  mode: single
- id: '1732218748464'
  alias: Check Medication Stock - With Location
  description: This automation periodically triggers the pyscript.check_stock script
    to check for medication availability at nearby pharmacies based on the current
    location of person.richard. It retrieves the latitude and longitude from the person.richard
    entity and passes them, along with a configurable search radius, to the script.
  triggers:
  - at: 07:00:00
    trigger: time
  - at: 07:30:00
    trigger: time
  - at: 08:00:00
    trigger: time
  - at: 08:30:00
    trigger: time
  - at: 09:00:00
    trigger: time
  - at: 09:30:00
    trigger: time
  - at: '10:00:00'
    trigger: time
  - at: '10:30:00'
    trigger: time
  - at: '11:00:00'
    trigger: time
  - at: '11:30:00'
    trigger: time
  - at: '12:00:00'
    trigger: time
  - at: '13:30:00'
    trigger: time
  - at: '14:00:00'
    trigger: time
  - at: '14:30:00'
    trigger: time
  - at: '15:00:00'
    trigger: time
  - at: '15:30:00'
    trigger: time
  - at: '16:00:00'
    trigger: time
  - at: '16:30:00'
    trigger: time
  - at: '17:00:00'
    trigger: time
  - at: '17:30:00'
    trigger: time
  - at: '18:00:00'
    trigger: time
  - at: '18:30:00'
    trigger: time
  conditions: []
  actions:
  - data_template:
      base_lat: '{{ state_attr(''person.richard'', ''latitude'') }}'
      base_lon: '{{ state_attr(''person.richard'', ''longitude'') }}'
      distance: 60
    action: pyscript.check_stock
  mode: single
- id: '1732218791930'
  alias: Notify When Medication is in Stock
  description: This automation monitors the sensor.adhd_medication_stock entity, which
    is updated by the pyscript.check_stock script. When the sensor state changes to
    on, indicating that medication is available within the specified distance from
    the current location of person.richard, a notification is sent to the user.
  triggers:
  - entity_id:
    - sensor.adhd_medication_stock
    to: 'on'
    trigger: state
  actions:
  - data:
      data:
        color: blue
        channel: ADHD
        vibrationPattern: 100,500,100,500,100,500,100,500
        importance: high
        visibility: public
        notification_icon: mdi:pill
        ttl: 0
        priority: high
        sticky: 'true'
      message: 'The following stores have stock: {{ state_attr(''sensor.adhd_medication_stock'',
        ''stores'') | map(attribute=''displayName'') | join(''. '') }}

        '
      title: ADHD Medication
    action: notify.mobile_app_rich_mob_app
  mode: single
- id: '1732231906963'
  alias: Notify on Medication Stock Check Failure
  description: Notify if the medication stock check script encounters an error.
  triggers:
  - entity_id:
    - binary_sensor.adhd_medication_check_error
    to: 'on'
    trigger: state
    from: 'off'
  actions:
  - data_template:
      title: Medication Stock Check Error
      message: 'The stock check script failed with the following error: {{ state_attr(''sensor.adhd_medication_stock'',
        ''error'') }}

        '
    action: notify.mobile_app_rich_mob_app
  mode: single
- id: '1734033969313'
  alias: Turn off heating when no one is home
  description: Set the nest target temperature low if no one is home
  triggers:
  - trigger: zone
    entity_id: person.lucy
    zone: zone.home
    event: leave
  - trigger: zone
    entity_id: person.richard
    zone: zone.home
    event: leave
  conditions:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    alias: Check if anyone is NOT home
  actions:
  - action: climate.set_temperature
    metadata: {}
    data:
      temperature: 10
    target:
      device_id: df18efe5cd5bd9cf0330bcf82def7f62
  mode: single
- id: '1736544967218'
  alias: Low battery level detection & notification for all battery sensors [Blueprint]
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      threshold: 15
      day: 6
      time: '18:00:00'
      actions:
      - data:
          data:
            color: purple
            channel: batteries
            visibility: public
            notification_icon: mdi:battery-alert-variant-outline
            ttl: 0
            sticky: 'true'
          message: 'Battery low: {{sensors}}

            '
          title: Battery Levels Low
        action: notify.mobile_app_rich_mob_app
      - data:
          title: Battery Low
          message: Battery low {{sensors}}
        action: persistent_notification.create
        enabled: false
- id: '1736703475166'
  alias: Energenie eTRV Diagnostics Once a Week
  description: ''
  triggers:
  - at: 08:00:00
    trigger: time
  conditions:
  - condition: time
    weekday:
    - mon
  actions:
  - device_id: 061f81b04836d8e074d7e2542b21767c
    domain: climate
    entity_id: 85fd7edb412d78a913c1bf7147db79a5
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: a46ff2f2479fd7381a267a77a12734ae
    domain: climate
    entity_id: 1dc6cd56095c82c66dc458c436527a3d
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: e79922e5a787ed8db81ee253715ea823
    domain: climate
    entity_id: 62b634275f68a5e6e82986ad6fe56f13
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: 55d26468639a4f1005742215878de937
    domain: climate
    entity_id: 168ee9f59e0b15f8719800c92f16f8c9
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: f694a04cab17376f9ccbb97b67b6365d
    domain: climate
    entity_id: a9f2ad8cd9cfb413cb59e78f56bcca5b
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: 9fb3ba0a224918b6c1b43afbcc3c1f23
    domain: climate
    entity_id: f175045657712af0731ec9edf74b1479
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: d87bf9712abd725b400a815405c374ac
    domain: climate
    entity_id: e46f27494a4d65b24c09f340418a9438
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: 71e963eadf1071d0f777742a6fbb5cf9
    domain: climate
    entity_id: b8a6f7260b91a515810a154c4bb51486
    type: set_preset_mode
    preset_mode: Request Diagnostics
  - device_id: a9d1acaaf374a3234065ce3dca7d9f04
    domain: climate
    entity_id: c56d5518b41049387e082722202d573b
    type: set_preset_mode
    preset_mode: Request Diagnostics
  mode: single
- id: '1736704010332'
  alias: Track Heating Boiler State
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - climate.hallway
    attribute: hvac_action
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: climate.hallway
        attribute: hvac_action
        state: heating
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          device_id: c1a95ebc950f2879ad90251c3400caf7
      - action: mqtt.publish
        metadata: {}
        data:
          evaluate_payload: false
          qos: '1'
          retain: false
          topic: energenie/boiler/state
          payload: 'on'
    - conditions:
      - condition: state
        entity_id: climate.hallway
        attribute: hvac_action
        state: idle
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          device_id: c1a95ebc950f2879ad90251c3400caf7
      - action: mqtt.publish
        metadata: {}
        data:
          evaluate_payload: false
          qos: '1'
          retain: false
          topic: energenie/boiler/state
          payload: 'off'
  mode: single
- id: '1738459474372'
  alias: Freezer Temperature Alert
  description: ''
  triggers:
  - type: problem
    device_id: 158ed9873a6957601df8faf23e43a98d
    entity_id: e5380eda90a5140965ad71108984ccde
    domain: binary_sensor
    trigger: device
    id: high
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - type: not_connected
    device_id: 158ed9873a6957601df8faf23e43a98d
    entity_id: 8e8427f8efa3902d88b52401f34f1695
    domain: binary_sensor
    trigger: device
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: offline
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - high
      sequence:
      - data:
          data:
            color: white
            channel: Freezer
            vibrationPattern: 100,500,100,500,100,500,100,500
            importance: high
            visibility: public
            notification_icon: mdi:snowflake-alert
            ttl: 0
            priority: high
            sticky: 'true'
          message: 'Top Temperature: {{ states(''sensor.chest_freezer_monitor_top_temperature'')}}
            Â°C. Bottom: {{ states(''sensor.chest_freezer_monitor_bottom_temperature'')
            }} Â°C\n Sent: {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
          title: Chest Freezer High Temperature Alert
        action: notify.mobile_app_rich_mob_app
      - data:
          data:
            color: white
            channel: Freezer
            vibrationPattern: 100,500,100,500,100,500,100,500
            importance: high
            visibility: public
            notification_icon: mdi:snowflake-alert
            ttl: 0
            priority: high
            sticky: 'true'
          message: 'Top Temperature: {{ states(''sensor.chest_freezer_monitor_top_temperature'')}}
            Â°C. Bottom: {{ states(''sensor.chest_freezer_monitor_bottom_temperature'')
            }} Â°C\n Sent: {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
          title: Chest Freezer High Temperature Alert
        action: notify.mobile_app_lucy_mob_app
    - conditions:
      - condition: trigger
        id:
        - offline
      sequence:
      - data:
          data:
            color: white
            channel: Freezer
            vibrationPattern: 100,500,100,500,100,500,100,500
            importance: high
            visibility: public
            notification_icon: mdi:snowflake-alert
            ttl: 0
            priority: high
            sticky: 'true'
          message: 'Chest Freezer Monitor is Offline\n Last know Top Temperature:
            {{ states(''sensor.chest_freezer_monitor_top_temperature'')}} Â°C. Bottom:
            {{ states(''sensor.chest_freezer_monitor_bottom_temperature'') }} Â°C\n
            Sent: {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
          title: Chest Freezer Offline
        action: notify.mobile_app_rich_mob_app
  mode: single
- id: '1740623037208'
  alias: Lucy Insulin Pump Sensor Watcher
  description: ''
  triggers:
  - type: value
    device_id: c3baec3b4ba49f11d45ef9e1ef28a26b
    entity_id: 562e7d0d1fd3dc62fe7f48f94555d0b1
    domain: sensor
    trigger: device
    below: 10
    enabled: false
  - trigger: time
    at: '23:45:00'
  conditions:
  - type: is_value
    condition: device
    device_id: c3baec3b4ba49f11d45ef9e1ef28a26b
    entity_id: 562e7d0d1fd3dc62fe7f48f94555d0b1
    domain: sensor
    below: 10
  actions:
  - data:
      message: '"Pump sensor will not last the night: {{ states(''sensor.sensor_duration_hours'')
        }} hourls left."

        '
      data:
        color: black
        channel: Pump1
        vibrationPattern: 500,500,500,500,500,500,500,500,500,500,500,500,
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:pump
        ttl: 0
        priority: high
        sticky: 'true'
      title: ' Pump will not last the night'
    action: notify.mobile_app_lucy_mob_app
  mode: single
- id: '1741741446182'
  alias: Lucy Insulin Pump Resuwar Watcher
  description: ''
  triggers: []
  conditions: []
  actions: []
  mode: single
- id: '1742671428912'
  alias: Notify Fridge Door Left Open
  description: ''
  triggers:
  - type: opened
    device_id: d0b18b2ae1cd529c02498c3649a0a83b
    entity_id: 41e75657d30f7f7021a46bc435b5979a
    domain: binary_sensor
    trigger: device
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions: []
  actions:
  - data:
      data:
        color: white
        channel: Fridge
        vibrationPattern: 100,100,100,100,100,100,100,100
        importance: high
        visibility: public
        notification_icon: mdi:alert-decagram-outline
        ttl: 0
        priority: high
        sticky: 'true'
      message: 'Fridge door left open for 5 mins Sent: {{now().strftime(''%Y-%m-%d
        %I:%M %p'')}}

        '
      title: Fridge Door Left Open
    action: notify.mobile_app_rich_mob_app
  - data:
      data:
        color: white
        channel: Fridge
        vibrationPattern: 100,100,100,100,100,100,100,100
        importance: high
        visibility: public
        notification_icon: mdi:alert-decagram-outline
        ttl: 0
        priority: high
        sticky: 'true'
      message: 'Fridge door left open for 5 mins Sent: {{now().strftime(''%Y-%m-%d
        %I:%M %p'')}}

        '
      title: Fridge Door Left Open
    action: notify.mobile_app_lucy_mob_app
  mode: single
